diff --git a/tests/test_edge_cases.py b/tests/test_edge_cases.py
index 0123456..89abcde 100644
--- a/tests/test_edge_cases.py
+++ b/tests/test_edge_cases.py
@@ class TestUtilsEdgeCases(unittest.TestCase):
+    @patch.object(utils.GitHubHelper, "_graphql_query")
+    def test_get_project_item_id_found(self, mock_query):
+        mock_query.return_value = {
+            "node": {
+                "items": {
+                    "nodes": [
+                        {"content": {"number": 123}, "id": "item123"},
+                        {"content": {"number": 124}, "id": "item124"}
+                    ]
+                }
+            }
+        }
+        result = self.gh._get_project_item_id("proj_id", 123)
+        self.assertEqual(result, "item123")
+
+    @patch.object(utils.GitHubHelper, "_graphql_query")
+    def test_get_project_item_id_not_found(self, mock_query):
+        mock_query.return_value = {
+            "node": {
+                "items": {"nodes": []}
+            }
+        }
+        result = self.gh._get_project_item_id("proj_id", 999)
+        self.assertIsNone(result)
+
+    def test_set_issue_status_failure_path(self):
+        with patch.object(self.gh, "get_status_field_id", return_value=(None, None)):
+            result = self.gh.set_issue_status(1, "Todo", "proj_id")
+            self.assertFalse(result)
diff --git a/tests/test_main.py b/tests/test_main.py
index abcdef0..7654321 100644
--- a/tests/test_main.py
+++ b/tests/test_main.py
@@ class TestGitHubAutomation(unittest.TestCase):
+
+    def test_main_missing_config_fields(self):
+        mock_config = {
+            "github_token": "token",
+            "repo_owner": "owner",
+            "repo_name": "repo",
+            "issues": ["Task 1"]
+        }
+        with patch("src.github_prjt_automation.main.get_config", return_value=mock_config), \
+             patch("src.github_prjt_automation.main.GitHubHelper") as mock_helper:
+            mock_helper.return_value.get_or_create_project.return_value = "project_id"
+            mock_helper.return_value.create_issue.return_value = {"node_id": "abc123", "number": 1}
+            mock_helper.return_value.add_issue_to_project.return_value = True
+            try:
+                import src.github_prjt_automation.main as main_module
+                main_module.main()
+            except Exception:
+                self.fail("main() raised unexpectedly")
